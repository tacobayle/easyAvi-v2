- hosts: localhost
  connection: local
  gather_facts: no

  roles:
    - role: "avinetworks.avisdk"

  tasks:

    - name: Set variable avi_credentials
      set_fact:
        avi_credentials: >
          {'api_version': "{{ avi_version }}",
           'controller': "{{ controllerPrivateIps.0 }}",
           'password': "{{ avi_password }}",
           'username': "{{ avi_username }}"}
      tags:
        - creds
      when:
        - avi_version is defined
        - controllerPrivateIps is defined
        - avi_password is defined
        - avi_username is defined

    - name: Define ova path (in localhost variable)
      set_fact:
        ova_path: "./se.ova"
      when:
        - no_access_vcenter.name is defined

    - name: Get Clouds list
      avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: cloud
      register: cloudResults
      ignore_errors: yes

    - name: Define ova path (in localhost variable)
      set_fact:
        cloud_no_access_vcenter_uuid: "{{ item.uuid }}"
      loop: "{{ cloudResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      when:
        - item.name == no_access_vcenter.name

    - name: Add Content Library - Easy-Avi-CL-SE-NoAccess - import SE image
      shell: |
        export GOVC_DATACENTER="{{ no_access_vcenter.vcenter.dc }}"
        export GOVC_URL="https://{{ vsphere_username }}:{{ vsphere_password }}@{{ vsphere_server }}"
        export GOVC_DATASTORE="{{ no_access_vcenter.vcenter.datastore }}"
        export GOVC_INSECURE=true
        env | grep GOVC
        govc library.create Easy-Avi-CL-SE-NoAccess
        govc library.import Easy-Avi-CL-SE-NoAccess {{ ova_path }}
      when:
        - no_access_vcenter.vcenter.dc is defined
        - vsphere_username is defined
        - vsphere_password is defined
        - vsphere_server is defined
        - ova_path is defined

    - name: Run a playbook against SE group (SE Creation and SE Group Assignement) - this takes several minutes
      command: python3 python/seCreationVmware2.py "{{ avi_credentials | to_yaml }}" "{{ item | to_yaml }}" "{{ cloud_no_access_vcenter_uuid }}" "{{ no_access_vcenter.vcenter | to_yaml }}" "{{ vsphere_username }}" "{{ vsphere_password }}" "{{ vsphere_server }}" "Easy-Avi-CL-SE-NoAccess" "{{ no_access_vcenter.deployment_id }}"
      register: logPbSeCreation
      loop: "{{ no_access_vcenter.serviceEngineGroup }}"
      ignore_errors: yes
      when:
        - cloud_no_access_vcenter_uuid is defined
        - no_access_vcenter.serviceEngineGroup is defined
        - avi_credentials is defined
        - no_access_vcenter.vcenter is defined
        - vsphere_username is defined
        - vsphere_password is defined
        - vsphere_server is defined
        - no_access_vcenter.deployment_id is defined

    - name: Remove Content Library - Easy-Avi-CL-SE-NoAccess
      shell: |
        export GOVC_DATACENTER="{{ no_access_vcenter.vcenter.dc }}"
        export GOVC_URL="https://{{ vsphere_username }}:{{ vsphere_password }}@{{ vsphere_server }}"
        export GOVC_INSECURE=true
        env | grep GOVC
        govc library.rm Easy-Avi-CL-SE-NoAccess
      when:
        - no_access_vcenter.vcenter.dc is defined
        - vsphere_username is defined
        - vsphere_password is defined
        - vsphere_server is defined